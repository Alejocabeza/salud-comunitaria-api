"""create_role_and_permission_table

Revision ID: 5a5231b1c3d5
Revises: 96acb88bebe9
Create Date: 2025-07-07 21:59:01.551872

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '5a5231b1c3d5'
down_revision: Union[str, None] = '96acb88bebe9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deleted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deleted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('auths_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_auths_roles_role_id'),
    sa.ForeignKeyConstraint(['user_id'], ['auths.id'], name='fk_auths_roles_user_id'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='pk_auths_roles')
    )
    with op.batch_alter_table('auths_roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_auths_roles_role_id'), ['role_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auths_roles_user_id'), ['user_id'], unique=False)

    op.create_table('roles_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='fk_roles_permissions_permission_id'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_roles_permissions_role_id'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id', name='pk_roles_permissions')
    )
    with op.batch_alter_table('roles_permissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_permissions_permission_id'), ['permission_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_roles_permissions_role_id'), ['role_id'], unique=False)

    op.create_table('users_permissions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name='fk_users_permissions_permission_id'),
    sa.ForeignKeyConstraint(['user_id'], ['auths.id'], name='fk_users_permissions_user_id'),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name='pk_users_permissions')
    )
    with op.batch_alter_table('users_permissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_permissions_permission_id'), ['permission_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_permissions_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_permissions_user_id'))
        batch_op.drop_index(batch_op.f('ix_users_permissions_permission_id'))

    op.drop_table('users_permissions')
    with op.batch_alter_table('roles_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_permissions_role_id'))
        batch_op.drop_index(batch_op.f('ix_roles_permissions_permission_id'))

    op.drop_table('roles_permissions')
    with op.batch_alter_table('auths_roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auths_roles_user_id'))
        batch_op.drop_index(batch_op.f('ix_auths_roles_role_id'))

    op.drop_table('auths_roles')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
